permissions:
  id-token: write
  contents: read

name: Terraform-AWS-Infra-Deployment
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, release ]
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment (dev, qa, uat, prod)"
        required: true
        default: "prod"
      region:
        description: "AWS Region"
        required: true
        default: "eu-west-1"
      action:
        description: "Terraform action: apply (default) or destroy"
        required: false
        default: "apply"

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: false

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    env:
      TF_ENV: ${{ github.event.inputs.environment || 'prod' }}
      AWS_REGION: ${{ github.event.inputs.region || 'eu-west-1' }}
      AWS_DEFAULT_REGION: ${{ github.event.inputs.region || 'eu-west-1' }}
      TF_DIR: ${{ github.event.inputs.environment || 'prod' }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::987686461697:role/<ROLE_FOR_GITHUB_OIDC>
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I?
        run: aws sts get-caller-identity

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Verify working directory
        run: |
          echo "Working in ./${{ env.TF_DIR }}"
          ls -l ./${{ env.TF_DIR }}

      - name: Terraform fmt check
        working-directory: ${{ env.TF_DIR }}
        run: terraform fmt -check

      - name: Terraform init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init -upgrade -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform plan
        working-directory: ${{ env.TF_DIR }}
        run: terraform plan -lock=false

  approve:
    name: Await Approval
    runs-on: ubuntu-latest
    needs: plan
    environment: ${{ github.event.inputs.environment || 'prod' }}
    steps:
      - run: echo "âœ… Manual approval required in the Actions UI."

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: approve
    env:
      TF_ENV: ${{ github.event.inputs.environment || 'prod' }}
      AWS_REGION: ${{ github.event.inputs.region || 'eu-west-1' }}
      AWS_DEFAULT_REGION: ${{ github.event.inputs.region || 'eu-west-1' }}
      TF_DIR: ${{ github.event.inputs.environment || 'prod' }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::987686461697:role/<ROLE_FOR_GITHUB_OIDC>
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I?
        run: aws sts get-caller-identity

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Terraform init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init -backend-config="key=${{ env.TF_ENV }}/terraform.tfstate"

      - name: Terraform Apply
        if: ${{ github.event.inputs.action != 'destroy' }}
        working-directory: ${{ env.TF_DIR }}
        run: terraform apply -auto-approve -lock=false

      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ${{ env.TF_DIR }}
        run: terraform destroy -auto-approve -lock=false

# end of file